/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/timeanddate_screen/TimeAndDateViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

TimeAndDateViewBase::TimeAndDateViewBase()  :
    buttonCallback(this, &TimeAndDateViewBase::buttonCallbackHandler)
{
    TimeAndDateBG.setXY(0, 0);
    TimeAndDateBG.setBitmap(Bitmap(BITMAP_CONTROLS_BACKGROUND_ID));

    datepicker_main_background.setXY(0, 133);
    datepicker_main_background.setBitmap(Bitmap(BITMAP_DATEPICKER_MAIN_BACKGROUND_ID));

    datepicker_top_shadow_overlay.setXY(0, 141);
    datepicker_top_shadow_overlay.setBitmap(Bitmap(BITMAP_DATEPICKER_TOP_SHADOW_OVERLAY_ID));

    datepicker_bottom_shadow_overlay.setXY(0, 225);
    datepicker_bottom_shadow_overlay.setBitmap(Bitmap(BITMAP_DATEPICKER_BOTTOM_SHADOW_OVERLAY_ID));

    datepicker_glass_overlay.setXY(0, 193);
    datepicker_glass_overlay.setBitmap(Bitmap(BITMAP_DATEPICKER_GLASS_OVERLAY_ID));

    controls_menu_background.setXY(0, 41);
    controls_menu_background.setBitmap(Bitmap(BITMAP_CONTROLS_MENU_BACKGROUND_ID));

    control_menu_shadow_bottom.setXY(0, 41);
    control_menu_shadow_bottom.setBitmap(Bitmap(BITMAP_CONTROL_MENU_SHADOW_BOTTOM_ID));

    control_menu_shadow_top.setXY(222, 41);
    control_menu_shadow_top.setBitmap(Bitmap(BITMAP_CONTROL_MENU_SHADOW_TOP_ID));

    control_menu_icon_datepicker_large.setXY(92, 42);
    control_menu_icon_datepicker_large.setBitmap(Bitmap(BITMAP_CONTROL_MENU_ICON_DATEPICKER_LARGE_ID));

    control_menu_icon_gauge_small.setXY(163, 54);
    control_menu_icon_gauge_small.setBitmap(Bitmap(BITMAP_CONTROL_MENU_ICON_GAUGE_SMALL_ID));

    control_menu_icon_three_way_small.setXY(206, 54);
    control_menu_icon_three_way_small.setBitmap(Bitmap(BITMAP_CONTROL_MENU_ICON_THREE_WAY_SMALL_ID));

    control_menu_button.setXY(197, 279);
    control_menu_button.setBitmap(Bitmap(BITMAP_CONTROL_MENU_BUTTON_ID));

    timepickerbg.setXY(0, 133);
    timepickerbg.setBitmap(Bitmap(BITMAP_TIMEPICKER_MAIN_BACKGROUND_ID));

    timepickerShadowTop.setXY(0, 141);
    timepickerShadowTop.setBitmap(Bitmap(BITMAP_TIMEPICKER_TOP_SHADOW_OVERLAY_ID));

    timepickerShadowbottom.setXY(0, 216);
    timepickerShadowbottom.setBitmap(Bitmap(BITMAP_TIMEPICKER_BOTTOM_SHADOW_OVERLAY_ID));

    timepickerGlassOverlay.setXY(-65, 179);
    timepickerGlassOverlay.setBitmap(Bitmap(BITMAP_DATEPICKER_GLASS_OVERLAY_ID));

    timepickerSelectShow.setXY(78, 101);
    timepickerSelectShow.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    timepickerSelectShow.setLinespacing(0);
    timepickerSelectShow.setTypedText(TypedText(T_TIMEPICKER_SELECTEDSHOW));
    timepickerSelectShowBuffer[0] = 0;
    timepickerSelectShow.setWildcard(timepickerSelectShowBuffer);

    timeFormat.setXY(6, 112);
    timeFormat.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    timeFormat.setLinespacing(0);
    timeFormat.setTypedText(TypedText(T_TIMEFORMAT));

    timeFomatExample.setXY(6, 134);
    timeFomatExample.setColor(touchgfx::Color::getColorFrom24BitRGB(214,208,208));
    timeFomatExample.setLinespacing(0);
    timeFomatExample.setTypedText(TypedText(T_TIMEPICKER_SELECTEDSHOW));
    timeFomatExampleBuffer[0] = 0;
    timeFomatExample.setWildcard(timeFomatExampleBuffer);

    clockStyleText.setXY(9, 184);
    clockStyleText.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    clockStyleText.setLinespacing(0);
    clockStyleText.setTypedText(TypedText(T_CLOCKSTYLETEXT));

    timeFormattoggleBtn.setPosition(192, 111, 43, 30);
    timeFormattoggleBtn.setBitmaps(Bitmap(BITMAP_ON_43X30_ID), Bitmap(BITMAP_OFF_43X30_ID));
    timeFormattoggleBtn.setAction(buttonCallback);

    clockStyletoggleBtn.setPosition(192, 184, 43, 30);
    clockStyletoggleBtn.setBitmaps(Bitmap(BITMAP_ON_43X30_ID), Bitmap(BITMAP_OFF_43X30_ID));
    add(TimeAndDateBG);
    add(datepicker_main_background);
    add(datepicker_top_shadow_overlay);
    add(datepicker_bottom_shadow_overlay);
    add(datepicker_glass_overlay);
    add(controls_menu_background);
    add(control_menu_shadow_bottom);
    add(control_menu_shadow_top);
    add(control_menu_icon_datepicker_large);
    add(control_menu_icon_gauge_small);
    add(control_menu_icon_three_way_small);
    add(control_menu_button);
    add(timepickerbg);
    add(timepickerShadowTop);
    add(timepickerShadowbottom);
    add(timepickerGlassOverlay);
    add(timepickerSelectShow);
    add(timeFormat);
    add(timeFomatExample);
    add(clockStyleText);
    add(timeFormattoggleBtn);
    add(clockStyletoggleBtn);
}

void TimeAndDateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &timeFormattoggleBtn)
    {
        //enable24format
        //When timeFormattoggleBtn clicked execute C++ code
        //Execute C++ code
            if (timeFormattoggleBtn.getState() == true){
        
            }
    }
    else if (&src == &clockStyletoggleBtn)
    {

    }
}
