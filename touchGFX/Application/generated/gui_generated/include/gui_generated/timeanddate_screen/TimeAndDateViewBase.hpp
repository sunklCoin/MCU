/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TIMEANDDATE_VIEW_BASE_HPP
#define TIMEANDDATE_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/timeanddate_screen/TimeAndDatePresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>

class TimeAndDateViewBase : public touchgfx::View<TimeAndDatePresenter>
{
public:
    TimeAndDateViewBase();
    virtual ~TimeAndDateViewBase() {}

protected:
    FrontendApplication& application() { 
        return *static_cast<FrontendApplication*>(Application::getInstance()); 
    }

    /*
     * Member Declarations
     */
    touchgfx::Image TimeAndDateBG;
    touchgfx::Image datepicker_main_background;
    touchgfx::Image datepicker_top_shadow_overlay;
    touchgfx::Image datepicker_bottom_shadow_overlay;
    touchgfx::Image datepicker_glass_overlay;
    touchgfx::Image controls_menu_background;
    touchgfx::Image control_menu_shadow_bottom;
    touchgfx::Image control_menu_shadow_top;
    touchgfx::Image control_menu_icon_datepicker_large;
    touchgfx::Image control_menu_icon_gauge_small;
    touchgfx::Image control_menu_icon_three_way_small;
    touchgfx::Image control_menu_button;
    touchgfx::Image timepickerbg;
    touchgfx::Image timepickerShadowTop;
    touchgfx::Image timepickerShadowbottom;
    touchgfx::Image timepickerGlassOverlay;
    touchgfx::TextAreaWithOneWildcard timepickerSelectShow;
    touchgfx::TextArea timeFormat;
    touchgfx::TextAreaWithOneWildcard timeFomatExample;
    touchgfx::TextArea clockStyleText;
    touchgfx::ToggleButton timeFormattoggleBtn;
    touchgfx::ToggleButton clockStyletoggleBtn;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TIMEPICKERSELECTSHOW_SIZE = 30;
    touchgfx::Unicode::UnicodeChar timepickerSelectShowBuffer[TIMEPICKERSELECTSHOW_SIZE];
    static const uint16_t TIMEFOMATEXAMPLE_SIZE = 1;
    touchgfx::Unicode::UnicodeChar timeFomatExampleBuffer[TIMEFOMATEXAMPLE_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<TimeAndDateViewBase, const touchgfx::AbstractButton&> buttonCallback;

};

#endif // TIMEANDDATE_VIEW_BASE_HPP
