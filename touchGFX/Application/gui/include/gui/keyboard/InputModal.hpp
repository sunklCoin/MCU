/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef INPUT_MODAL_HPP
#define INPUT_MODAL_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/setting_screen/SettingPresenter.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/Color.hpp>

#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <gui/keyboard/CustomKeyboard.hpp>
#include <gui/framework/DevicePort.h>
using namespace touchgfx;
class InputModal : public ModalWindow
{
    public:
    InputModal();
    virtual ~InputModal() {}
	void setAddParams(const Unicode::UnicodeChar* strHeadLine, GenericCallback<strEditBox>& okCallback);
protected:
    FrontendApplication& application()
    {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
    * Member Declarations
    */
    CustomKeyboard keypad;
    Box boxInput;
    TextAreaWithOneWildcard passwordEdit;
    TextArea passwordHeadline;
    TextAreaWithOneWildcard devicename;
	ButtonWithLabel buttonOK;
	ButtonWithLabel buttonCancel;
    Box boxLine;

    /*
    * Wildcard Buffers
    */
    static const uint16_t PASSWORDEDIT_SIZE = 16;
    touchgfx::Unicode::UnicodeChar passwordEditBuffer[PASSWORDEDIT_SIZE];
	static const uint16_t DEVICENAME_SIZE = 60;
    touchgfx::Unicode::UnicodeChar devicenameBuffer[DEVICENAME_SIZE];
	char buffer[DEVICENAME_SIZE];
private:
	GenericCallback<strEditBox>* m_onOK_callback;
	Callback<InputModal, const AbstractButton&> buttonClickedCallback;
	void buttonClicked(const AbstractButton& source);
	Callback<InputModal, Unicode::UnicodeChar*> onUpdateTextEditArea;
	void updateTextEditArea(Unicode::UnicodeChar* buff);
};

#endif // INPUT_MODAL_HPP
